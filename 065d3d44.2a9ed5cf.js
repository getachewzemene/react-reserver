(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,m=d["".concat(i,".").concat(b)]||d[b]||u[b]||o;return n?a.a.createElement(m,s(s({ref:t},c),{},{components:n})):a.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},64:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),o=(n(0),n(112)),i={id:"rowtitle",title:"Row Title",sidebar_label:"Row Title"},s={unversionedId:"rowtitle",id:"rowtitle",isDocsHomePage:!1,title:"Row Title",description:"How about giving each row a title?",source:"@site/docs\\rowtitle.md",slug:"/rowtitle",permalink:"/react-reserver/docs/rowtitle",version:"current",sidebar_label:"Row Title",sidebar:"docs",previous:{title:"Column Title",permalink:"/react-reserver/docs/columntitle"},next:{title:"Bar Basics",permalink:"/react-reserver/docs/basicbar"}},l=[],c={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"How about giving each row a title?\nMaybe it represents a room, a vehicle or person.\nSo here we are going to create a list of people so we can assign their work times"),Object(o.b)("p",null,"Click on a title to see what happens!"),Object(o.b)("iframe",{src:"https://codesandbox.io/embed/rowtitle-04kdb?fontsize=14&hidenavigation=1&theme=dark&view=preview",style:{width:"100%",height:500,border:0,borderRadius:4,overflow:"hidden"},title:"RowTitle",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),";",Object(o.b)("p",null,"We are going to use the prop rowTitles which takes an array or a function that returns an array. "),Object(o.b)("p",null,"In order to control the width of the row title we use the prop rowTitleWidth"),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Notice the width of the row titles are taken into account when calculating the width of Reserver.\nSo if you pass ",Object(o.b)("em",{parentName:"p"},"500")," as the width prop of the component and ",Object(o.b)("em",{parentName:"p"},"140")," to rowTitleWidth the number of columns will be smaller\nthan if you did not have row titles"))),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"{29-45,47} file=../src/examples/RowTitle.js","{29-45,47}":!0,file:"../src/examples/RowTitle.js"}),"import React, { useState } from 'react'\nimport Reserver, {\n  Bar,\n  useReserver,\n  reserverReducer,\n  createBar,\n  getPosition,\n  resizeBars\n} from 'react-reserver'\n\nimport { names } from './testdata'\nimport styles from './basicexamples.module.css'\nexport default function RowTitle(props) {\n  const { bars, isEditing, setIsEditing, addBar, setBars } = useReserver(\n    reserverReducer,\n    []\n  )\n\n  const [selectedWorker, setSelectedWorker] = useState('')\n  return (\n    <>\n      {selectedWorker !== '' && (\n        <div className='alert alert--success' role='alert'>\n          <strong>{selectedWorker}'s</strong> Card\n        </div>\n      )}\n      <Reserver\n        cellClassName={styles.row_cell}\n        rowTitles={() => {\n          return names.map((val, index) => {\n            return (\n              <div\n                key={index}\n                style={{\n                  background: '#12D3CF',\n                  height: '100%',\n                  textAlign: 'center',\n                  cursor: 'pointer',\n                  fontSize: '15px'\n                }}\n                onClick={() => {\n                  setSelectedWorker(val)\n                }}\n              >\n                {val}\n              </div>\n            )\n          })\n        }}\n        rowTitleWidth={140}\n        mouseDownCell={(props) => {\n          const newbar = createBar(props.dimension, props.cell)\n          addBar(newbar)\n          setIsEditing(true)\n        }}\n        mouseEnterCell={(props) => {\n          if (isEditing) {\n            const nBars = resizeBars(bars, props)\n            setBars(nBars)\n          }\n        }}\n        mouseUpCell={() => {\n          const dBars = bars.map((bar) => {\n            if (bar.editing) {\n              return {\n                ...bar,\n                editing: false,\n                style: { ...bar.style, pointerEvents: 'auto' }\n              }\n            }\n            return bar\n          })\n\n          setBars(dBars)\n          setIsEditing(false)\n        }}\n      >\n        {({ columnTitleHeight, rowTitleWidth }) => {\n          return bars.map((bar) => {\n            return (\n              <Bar\n                key={bar.id}\n                {...bar}\n                style={{\n                  ...bar.style,\n                  ...getPosition(\n                    bar.row,\n                    bar.column,\n                    bar.dimension,\n                    rowTitleWidth,\n                    columnTitleHeight\n                  )\n                }}\n              />\n            )\n          })\n        }}\n      </Reserver>\n    </>\n  )\n}\n")))}p.isMDXComponent=!0}}]);